/*
 * Copyright (c) 2019. Antonello Andrea (www.hydrologis.com). All rights reserved.
 * Use of this source code is governed by a GPL3 license that can be
 * found in the LICENSE file.
 */
import 'package:sqflite/sqflite.dart';

String GPSLOGS_TABLE = "gpslogs";
/*
 * id of the log, Generated by the db.
 */
String COLUMN_ID = "_id";
/*
 * the start UTC timestamp.
 */
String COLUMN_LOG_STARTTS = "startts";
/*
 * the end UTC timestamp.
 */
String COLUMN_LOG_ENDTS = "endts";
/*
 * The length of the track in meters, as last updated.
 */
String COLUMN_LOG_LENGTHM = "lengthm";
/*
 * Is dirty field =0=false, 1=true)
 */
String COLUMN_LOG_ISDIRTY = "isdirty";
/*
 * the name of the log.
 */
String COLUMN_LOG_TEXT = "text";

class Log {
  int id;
  int startTime;
  int endTime;
  double lengthm;
  String text;
  int isDirty;
}

/// Get the count of the current logs
///
/// Get the count on a given [db], using [onlyDirty] to count only dirty notes.
Future<int> getLogsCount(Database db, bool onlyDirty) async {
  String where = !onlyDirty ? "" : " where ${COLUMN_LOG_ISDIRTY} = 1";
  var sql = "SELECT count(*) as count FROM ${GPSLOGS_TABLE}${where}";
  List<Map<String, dynamic>> resMap = await db
      .rawQuery(sql);

  var res = resMap[0];
  var count = res["count"];
  return count;
}